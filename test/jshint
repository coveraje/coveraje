#!/usr/bin/env node

(function () {
    "use strict";
    
    //
    // jshint the files
    var jshint = require("jshint").JSHINT,
        fs = require("fs"),
        path = require("path");
        
    var headWritten = false;
    function showhead() {
        if (!headWritten) {
            headWritten = true;
            console.log("jshint errors");
            console.log("-------------");
        }
    }
    
    
    function test(file, options, globals) {
        fs.readFile(file, 'utf-8', function (err, data) {
            if (err) {
                showhead();
                console.log(file);
                console.log("cannot load " + err);
            } else if (!jshint(data, options, globals)) {
                showhead();
                
                console.log(file);
                console.log(
                    jshint.errors.map(function (el) {
                        if (el) {
                            return {line: el.line, msg: el.reason, code: el.evidence};
                        }
                    })
                );
                console.log("--------------");
            }
        });
    }

    function testFiles(folder, options, globals) {
        fs.readdir(
            folder,
            function (err, files) {
                if (err) return;
                
                var ops = {
                    node: true,
                    white: true,
                    eqnull: true,
                    multistr: true,
                    plusplus: false,
                    regexp: false,
                    strict: true,
                    
                    bitwise: true,
                    eqeqeqe: true,
                    forin: true,
                    immed: true,
                    latedef: true,
                    newcap: true,
                    noarg: true,
                    noempty: true,
                    nonew: true,
                    undef: true,
                    trailing: true
                };
                
                if (options) {
                    for (var k in options) {
                        if (options.hasOwnProperty(k)) {
                            ops[k] = options[k];
                        }
                    }
                }
                
                
                var l = files.length;
                for (var i = 0; i < l; i++) {
                    var fp = path.join(folder, files[i]);
                    var ext = path.extname(files[i]);
                    if (fs.statSync(fp).isFile(fp) &&
                        fp.substr(fp.length - 1) !== "~" &&
                        (ext === ".js" || ext === "")) {
                        
                        test(fp, ops, globals);
                    }
                }
            }
        );
    }
    
    testFiles("../lib");
    testFiles("../lib/helper");
    testFiles("../webserver");
    testFiles("../test");
}());